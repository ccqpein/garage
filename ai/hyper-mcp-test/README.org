* Hyper MCP demo play

some demo play of [[https://github.com/tuananh/hyper-mcp?tab=readme-ov-file][hyper mcp]]

** start up

clone to my local

then install (delete the toolchain, I want use my nightly toolchain)

#+begin_src shell
  cargo install --path=.
#+end_src

copy config from repo readme

#+begin_src json
{
  "plugins": [
    {
      "name": "time",
      "path": "oci://ghcr.io/tuananh/time-plugin:latest"
    },
    {
      "name": "qr-code",
      "path": "oci://ghcr.io/tuananh/qrcode-plugin:latest"
    },
    {
      "name": "hash",
      "path": "oci://ghcr.io/tuananh/hash-plugin:latest"
    },
    {
      "name": "myip",
      "path": "oci://ghcr.io/tuananh/myip-plugin:latest",
      "runtime_config": {
        "allowed_hosts": ["1.1.1.1"]
      }
    },
    {
      "name": "fetch",
      "path": "oci://ghcr.io/tuananh/fetch-plugin:latest",
      "runtime_config": {
        "allowed_hosts": ["*"],
        "memory_limit": "100 MB"
      }
    }
  ]
}
#+end_src

Then

~hyper-mcp -c config.json~

need make a new ghcr.io token

** client side

I am thinking use the emacs as client. I found this one [[https://github.com/lizqwerscott/mcp.el][mcp.el]]

#+begin_src elisp
  (let ((connection (gethash "hyper-mcp" mcp-server-connections)))
    (mcp-call-tool connection "echo" '(:name "echo" :input "hello")))
#+end_src

** write some plugin

~./echo~

*** how is the extism

#+begin_quote
The framework for building with WebAssembly (wasm). Easily & securely load wasm modules, move data, call functions, and build extensible apps.
#+end_quote

look like need to learn something called XTP, then binding with extism.

*** build xtp-rust-bindgen

[[https://github.com/tuananh/hyper-mcp/issues/46][xtp-bindgen source]]

#+begin_src shell
  git clone git@github.com:dylibso/xtp-rust-bindgen.git
#+end_src

#+begin_src shell
  cd xtp-rust-bindgen/ ; and ./bundle.sh
#+end_src

need to install /extism-js/, I don't want to install in my local and npm docker image doesn't have ~sudo~ to run the install the script.

I think I just copy the `pdk.rs`

*** build to WASM

copy this [[https://github.com/tuananh/hyper-mcp/blob/a02f0ec9bd09008dbc75503f595638b61184d44e/examples/plugins/time/src/pdk.rs][file]] to ~./src~

#+begin_src shell
  cargo build --target wasm32-unknown-unknown
#+end_src

also write the ~Dockerfile~.

#+begin_src shell
  docker build . \
         docker tag <hash> ghcr.io/ccqpein/echo:latest \
         docker push ghcr.io/ccqpein/echo:latest
#+end_src

*** add to plugin

add this to config

#+begin_quote
    {
      "name": "echo",
      "path": "oci://ghcr.io/ccqpein/echo:latest"
    },
#+end_quote

*** re-run it

*need to run with --insecure-skip-signature*

** make some agent

try to make agent connet with llm

*** run the llm

I had ollama, but I am trying to run the mlx supported module.

but ~uv pip install -U mlx-vlm~ and ~uv tool install mlx-vlm~ are all return error. 

find the way, I need the 3.11 python rather than 3.13 I installed.

#+begin_src shell
  uv pip install sentencepiece
  uv pip install -U mlx-vlm
#+end_src

but download the model below keep giving the error.

#+begin_src shell
  python -m mlx_vlm.generate --model mlx-community/Llama-4-Scout-17B-16E-Instruct-4bit --max-tokens 1024 --temperature 0.0 --prompt "tell me a joke."
#+end_src
