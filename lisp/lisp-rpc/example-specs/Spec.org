* Spec

** Plain mode

client just send the Lisp type data (pure string) to server. Server get the data and return the result.

It should be ~(funcname &args &keywords)~

#+begin_src lisp
  (get-book :title "hello world" :version "1984")
#+end_src

this means server receive the ~get-book~ call and receive the titles and versions as the arguments

server should do the parsing job and handle the call

it should return the

#+begin_src lisp
  (book-info :result "aaa")
#+end_src

~book-info~ is the response data type

** Spec mode

this mode will generate the client and server lib for other use. It give the more standard of api, pre-check, and some useful functions.

it should look like:

#+begin_src lisp
  (def-msg language-perfer :lang 'string)

  (def-msg book-info
    :lang 'language-perfer
    :title 'string
    :version 'string
    :id 'string)

  (def-rpc get-book
      '(:title 'string :vesion 'string :lang 'language-perfer)
    'book-info)
#+end_src

if will generate the client/server libs. Client just given the data struct which can generate the pure string data that send to server like plain mode:

#+begin_src lisp
  (get-book :title "hello world" :version "1984" :lang '(:lang "english"))
#+end_src

server side also can use the data struct but parse the data to the languages' struct 
